@startuml
navigationController ^-- delegateAuthorityController
navigationController ^-- appointDepartmentRepController
navigationController ^-- changeCollecitonPointController
class navigationController{
    void:homePage()
}

class stationeryRetrievalController{
    void:createStationeryRetrievalFormView()
    void:load
}
class createStationeryRetrievalFormView{

}

' Ordering Package
class createOrdersController <<Controller>> {
    ActionItem: homePage()
    ActionItem: searchReorderDetailsByCategoryAndDescription(Category category, string searchTerm)
    ActionItem: goToOrderQuantity(ReorderItemsForm items)
    ActionItem: backToItemCatalogue(ReorderItemsForm items)
    ActionItem: goToPlaceOrder(ReorderQuantitiesForm quantities)
    ActionItem: backToOrderQuantity(ReorderQuantitiesForm quantities)
    ActionItem: submitOrder(ReorderForm reorderForm)
    ActionItem: downloadPurchaseOrders(int OrderId)
}

class viewReceivedOrdersListController <<Controller>> {
    ' serves as back route from Received Orders Details page
    ActionItem: viewPastReceivedOrdersList()
    ActionItem: viewPastOrder(int orderId)
    ActionItem: homePage()
}

class restockInventoryController <<ApiController>> {
    List<OrderSupplierDetails>: getOrderSupplierDetails(int orderId, int supplierId)
    void: updateOrderSupplierDetail(int orderSupplierDetailId, int quantityReceived)
}

class submitInvoiceController <<Controller>> {
    ActionItem: viewSubmitInvoice()
    void: submitInvoice(File invoice)
}

@enduml